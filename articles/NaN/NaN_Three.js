// case 1
console.log(0 === -0); // true
console.log(-0 === +0); // true
console.log(+0 === -0); // true
console.log(-0 === -0); // true

// case 2
console.log(NaN == NaN); // false
console.log(NaN === NaN); // false

console.log(Object.is(-0, +0));

console.log(Number(+0));
console.log(Number(-0));

// Object.is() doesn't coerce either value
// Object.is() and === is in their treatment of signed zeros and NaN values

// string is empty and no separator is specified
// console.log(emptyString.split(""));


üëã Hello `JavaScript Enthusiasts!` ‡¶Ü‡¶ú‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ú‡¶æ‡¶≠‡¶æ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü ‡¶è‡¶∞ `NaN` ‡¶®‡¶ø‡ßü‡ßá ‡¶Ü‡¶∞‡ßã‡¶ì ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶ú‡¶æ‡¶®‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶¨

‚úåÔ∏è ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶¶‡ßÅ‡¶á ‡¶™‡¶∞‡ßç‡¶¨‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ú‡ßá‡¶®‡ßá‡¶õ‡¶ø `NaN` ‡¶è‡¶ï‡¶ü‡¶æ `Number` ‡¶§‡¶¨‡ßá **legal ‡¶ï‡ßã‡¶® ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶®‡ßü** ‡•§ `NaN` ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶ú‡¶æ‡¶∏‡ßç‡¶ü ‡¶è‡¶ï‡¶ü‡¶æ `global property` ‡•§ ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶ü‡¶æ‡¶∞ ‡¶ü‡¶æ‡¶á‡¶™ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶ø `typeof` ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶¨ `number`

```
console.log(typeof NaN); // number
```

‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶¶‡ßÅ‡¶á ‡¶™‡¶∞‡ßç‡¶¨‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ `isNaN()` ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶è‡¶¨‡¶Ç `Number.isNaN()`  ‡¶Æ‡ßá‡¶•‡¶° ‡¶¶‡¶ø‡ßü‡ßá ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‡¶è‡¶ü‡¶æ ‡¶¶‡ßá‡¶ñ‡ßá‡¶õ‡¶ø‡•§ 
‡¶Ü‡¶ú‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶¶‡ßá‡¶ñ‡¶¨ ‡¶Ü‡¶∞‡ßã‡¶ì ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶π‡ßá‡¶®‡ßç‡¶°‡¶ø ‡¶ü‡ßá‡¶ï‡¶®‡¶ø‡¶ï `Object.is()` ‡¶è‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ 


`Object.is()` ‡¶Æ‡ßá‡¶•‡¶° ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ ‡¶∏‡ßá‡¶á‡¶Æ ‡¶ï‡¶ø ‡¶∏‡ßá‡¶á‡¶Æ ‡¶®‡¶æ ‡¶è‡¶ü‡¶æ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßá  ‡¶¨‡¶≤‡ßá ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§ 


```
console.log(Object.is('1', 1)); // false


console.log(Object.is(NaN, NaN)); // true

console.log(Object.is(-0, 0)); // false

const obj = {};
console.log(Object.is(obj, {})); // false
```

